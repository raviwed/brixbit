import{ContentTypeId as e}from"@brixbit/brixbit-js";import{content as t}from"@brixbit/proto";const n=new e({authorityId:"brixbit.org",typeId:"reply",versionMajor:1,versionMinor:0});class o{get contentType(){return n}encode(e,o){const r=o.codecFor(e.contentType);if(!r)throw new Error(`missing codec for content type "${e.contentType.toString()}"`);const c=r.encode(e.content,o),p=t.EncodedContent.encode(c).finish();return{type:n,parameters:{contentType:e.contentType.toString(),reference:e.reference},content:p}}decode(n,o){const r=t.EncodedContent.decode(n.content);if(!r.type)throw new Error("missing content type");const c=new e(r.type),p=o.codecFor(c);if(!p)throw new Error(`missing codec for content type "${c.toString()}"`);return{reference:n.parameters.reference,contentType:c,content:p.decode(r,o)}}fallback(e){return"string"==typeof e.content?`Replied with “${e.content}” to an earlier message`:"Replied to an earlier message"}}export{n as ContentTypeReply,o as ReplyCodec};
//# sourceMappingURL=index.js.map
