import{ContentTypeId as e,Ciphertext as t,decrypt as n,encrypt as r}from"@brixbit/brixbit-js";import*as o from"@noble/secp256k1";import{content as a}from"@brixbit/proto";const s=new e({authorityId:"brixbit.org",typeId:"attachment",versionMajor:1,versionMinor:0});class c{get contentType(){return s}encode(e){return{type:s,parameters:{filename:e.filename,mimeType:e.mimeType},content:e.data}}decode(e){return{filename:e.parameters.filename,mimeType:e.parameters.mimeType,data:e.content}}fallback(e){return`Can’t display "${e.filename}". This app doesn’t support attachments.`}}const i=window.crypto,m=new e({authorityId:"brixbit.org",typeId:"remoteStaticAttachment",versionMajor:1,versionMinor:0});class d{static async load(r,s){const c=await fetch(r.url),m=new Uint8Array(await c.arrayBuffer());if(!m)throw new Error(`no payload for remote attachment at ${r.url}`);const d=new Uint8Array(await i.subtle.digest("SHA-256",m));if(o.utils.bytesToHex(d)!==r.contentDigest)throw new Error("content digest does not match");const p=new t({aes256GcmHkdfSha256:{hkdfSalt:r.salt,gcmNonce:r.nonce,payload:m}}),l=await n(p,r.secret),y=a.EncodedContent.decode(l);if(!y||!y.type)throw new Error("no encoded content");const h=y.type;if(!h)throw new Error("no content type");const f=s.codecFor(new e(h));if(!f)throw new Error(`no codec found for ${y.type?.typeId}`);return f.decode(y,s)}static async encodeEncrypted(e,t){const n=i.getRandomValues(new Uint8Array(32)),s=a.EncodedContent.encode(t.encode(e,{codecFor(){}})).finish(),c=await r(s,n),m=c.aes256GcmHkdfSha256?.hkdfSalt,d=c.aes256GcmHkdfSha256?.gcmNonce,p=c.aes256GcmHkdfSha256?.payload;if(!m||!d||!p)throw new Error("missing encryption key");const l=new Uint8Array(await i.subtle.digest("SHA-256",p));return{digest:o.utils.bytesToHex(l),secret:n,salt:m,nonce:d,payload:p}}get contentType(){return m}encode(e){if(!e.url.startsWith("https"))throw new Error("scheme must be https");return{type:m,parameters:{contentDigest:e.contentDigest,salt:o.utils.bytesToHex(e.salt),nonce:o.utils.bytesToHex(e.nonce),secret:o.utils.bytesToHex(e.secret),scheme:e.scheme,contentLength:String(e.contentLength),filename:e.filename},content:(new TextEncoder).encode(e.url)}}decode(e){return{url:(new TextDecoder).decode(e.content),contentDigest:e.parameters.contentDigest,salt:o.utils.hexToBytes(e.parameters.salt),nonce:o.utils.hexToBytes(e.parameters.nonce),secret:o.utils.hexToBytes(e.parameters.secret),scheme:e.parameters.scheme,contentLength:parseInt(e.parameters.contentLength,10),filename:e.parameters.filename}}fallback(e){return`Can’t display "${e.filename}". This app doesn’t support attachments.`}}export{c as AttachmentCodec,s as ContentTypeAttachment,m as ContentTypeRemoteAttachment,d as RemoteAttachmentCodec};
//# sourceMappingURL=index.js.map
